{"version":3,"sources":["components/Book.js","components/BookShelf.js","components/BookList.js","utils/BooksAPI.js","components/BookSearch.js","App.js","index.js"],"names":["Book","this","props","book","onUpdateBook","className","href","previewLink","target","style","backgroundImage","undefined","imageLinks","smallThumbnail","defaultValue","shelf","onChange","event","value","disabled","title","authors","map","author","key","Component","BookShelf","books","shelfName","shelfType","filter","id","BookList","to","api","token","localStorage","Math","random","toString","substr","headers","update","fetch","method","body","JSON","stringify","then","res","json","BookSearch","state","query","searchResults","updateQuery","setState","searchBooks","length","maxResults","data","BooksAPI","console","log","error","resultBook","bookMatch","type","placeholder","autoFocus","BooksApp","updateBook","b","concat","exact","path","render","React","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d698277c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Book extends Component {\r\n  static propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n    onUpdateBook: PropTypes.func.isRequired\r\n  }\r\n\r\n  render() {\r\n    const { book, onUpdateBook } = this.props;\r\n\r\n    return (\r\n      <li>\r\n        \t<div className=\"book\">\r\n            <div className=\"book-top\">\r\n              <a href={book.previewLink} target=\"_blank\">\r\n                <div className=\"book-cover\" style={{ backgroundImage: `url(${book.imageLinks === undefined ? '' : book.imageLinks.smallThumbnail})` }}></div>\r\n              </a>\r\n              <div className=\"book-shelf-changer\">\r\n                <select defaultValue={book.shelf === undefined ? 'none' : book.shelf} onChange={(event) => onUpdateBook(book, event.target.value)}>\r\n                  <option value=\"none\" disabled>Move to...</option>\r\n                  <option value=\"currentlyReading\">Currently Reading</option>\r\n                  <option value=\"wantToRead\">Want to Read</option>\r\n                  <option value=\"read\">Read</option>\r\n                  <option value=\"none\">None</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"book-title\">{book.title}</div>\r\n            <div className=\"book-authors\">\r\n              {book.authors && book.authors.map(author => (<div key={author}>{author}</div>))}\r\n            </div>\r\n          </div>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Book;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Book from './Book';\r\n\r\nclass BookShelf extends Component {\r\n\tstatic propTypes = {\r\n\t\tbooks: PropTypes.array.isRequired,\r\n\t\tshelfName: PropTypes.string.isRequired,\r\n\t\tshelfType: PropTypes.string.isRequired,\r\n\t\tonUpdateBook: PropTypes.func.isRequired\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { books, shelfName, shelfType, onUpdateBook } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"bookshelf\">\r\n\t\t\t\t<h2 className=\"bookshelf-title\">{shelfName}</h2>\r\n\t\t\t\t<div className=\"bookshelf-books\">\r\n\t\t\t\t\t<ol className=\"books-grid\">\r\n\t\t\t\t\t\t{books.filter((book) => book.shelf === shelfType).map((book) => (<Book key={book.id} book={book} onUpdateBook={onUpdateBook}/>))}\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default BookShelf;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport BookShelf from './BookShelf';\r\n\r\nclass BookList extends Component {\r\n  static propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    onUpdateBook: PropTypes.func.isRequired\r\n  }\r\n\r\n  render() {\r\n    const { books, onUpdateBook } = this.props;\r\n\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <BookShelf shelfName='Currently Reading' shelfType='currentlyReading' books={books} onUpdateBook={onUpdateBook}/>\r\n            <BookShelf shelfName='Want to Read' shelfType='wantToRead' books={books} onUpdateBook={onUpdateBook}/>\r\n            <BookShelf shelfName='Read' shelfType='read' books={books} onUpdateBook={onUpdateBook}/>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"open-search\">\r\n            <Link to=\"/search\">Add a book</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BookList;","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query, maxResults })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Book from './Book';\r\nimport * as BooksAPI from '../utils/BooksAPI';\r\n\r\nclass BookSearch extends Component {\r\n\tstatic propTypes = {\r\n\t\tonUpdateBook: PropTypes.func.isRequired,\r\n\t\tbooks: PropTypes.array.isRequired\r\n\t}\r\n\r\n\tstate = {\r\n\t\tquery: '',\r\n\t\tsearchResults: ''\r\n\t}\r\n\r\n\tsearchBooks(query) {\r\n\t\tif (query.length > 0) {\r\n      BooksAPI.search(query, 20).then((searchResults) => {\r\n\t\t\t\tconsole.log(searchResults);\r\n        if (searchResults === undefined || searchResults.error) {\r\n          this.setState({ searchResults: [] });\r\n        }\r\n        else {\r\n          for (let resultBook of searchResults) {\r\n            var bookMatch = this.props.books.filter(book => (resultBook.id === book.id));\r\n            \r\n            if(bookMatch[0] !== undefined) {\r\n               resultBook.shelf = bookMatch[0].shelf;\r\n            }           \r\n          }\r\n        \r\n          this.setState({ searchResults });\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.setState({ searchResults: [] });\r\n    }\r\n\t}\r\n\t\t\r\n\tupdateQuery = (query) => {\r\n\t\tthis.setState({ query });\r\n\t\tthis.searchBooks(query);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { onUpdateBook } = this.props;\r\n\t\tconst { query, searchResults } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"search-books\">\r\n\t\t\t\t<div className=\"search-books-bar\">\r\n\t\t\t\t\t<Link to=\"/\" className=\"close-search\">Close</Link>\r\n\t\t\t\t\t<div className=\"search-books-input-wrapper\">\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"Search by title or author\"\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\tvalue={query}\r\n\t\t\t\t\t\t\tonChange={(event) => this.updateQuery(event.target.value)} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"search-books-results\">\r\n\t\t\t\t\t<ol className=\"books-grid\">\r\n\t\t\t\t\t\t{query === '' || searchResults === '' ? null : searchResults.map((book) => (<Book key={book.id} book={book} onUpdateBook={onUpdateBook} />))}\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default BookSearch;","import React from 'react';\r\nimport { Route } from 'react-router-dom'\r\nimport BookList from './components/BookList';\r\nimport BookSearch from './components/BookSearch';\r\nimport * as BooksAPI from './utils/BooksAPI';\r\nimport './App.css';\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then((books) => {\r\n      this.setState({ books });\r\n    });\r\n  };\r\n\r\n  updateBook = (book, shelf) => {\r\n    if (book.shelf !== shelf) {\r\n      BooksAPI.update(book.id, shelf).then(() => {\r\n        book.shelf = shelf\r\n\r\n        // Filter out the book and append it to the end of the list\r\n        // so it appears at the end of whatever shelf it was added to.\r\n        this.setState(state => ({\r\n          books: state.books.filter(b => b.id !== book.id).concat([ book ])\r\n        }));\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route exact path=\"/\" render={() => (\r\n          <BookList\r\n            onUpdateBook={this.updateBook}\r\n            books={this.state.books}\r\n          />\r\n        )} />\r\n        <Route path=\"/search\" render={() => (\r\n          <BookSearch \r\n            onUpdateBook={this.updateBook}\r\n            books={this.state.books}\r\n          />\r\n        )} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <HashRouter><App /></HashRouter>,\r\n    document.getElementById('root'));\r\n"],"sourceRoot":""}